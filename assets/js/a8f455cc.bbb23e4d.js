"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[558],{3593:(e,r,t)=>{t.r(r),t.d(r,{Map0:()=>x,assets:()=>h,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>c,toc:()=>j});var n=t(4848),s=t(8453),i=t(800),a=t(6145),l=t(8478);const d={title:"transformTranslate"},o=void 0,c={id:"api/transformTranslate",title:"transformTranslate",description:"Description",source:"@site/docs/api/transformTranslate.mdx",sourceDirName:"api",slug:"/api/transformTranslate",permalink:"/docs/api/transformTranslate",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/transformTranslate.mdx",tags:[],version:"current",frontMatter:{title:"transformTranslate"},sidebar:"apiSidebar",previous:{title:"transformScale",permalink:"/docs/api/transformScale"},next:{title:"union",permalink:"/docs/api/union"}},h={},j=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function x(){var e=i.n1([[[0,29],[3.5,29],[2.5,32],[0,29]]]),r=i.tLh(e,100,35),t={poly:e,translatedPoly:r};return r.properties={stroke:"#F00","stroke-width":4},(0,n.jsx)(a.A,{addToMap:t})}function p(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Moves any geojson Feature or Geometry of a specified distance along a Rhumb Line\non the provided direction angle."}),"\n",(0,n.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"geojson"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(r.td,{children:"object to be translated"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"distance"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"number"})}),(0,n.jsx)(r.td,{children:"length of the motion; negative values determine motion in opposite direction"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"direction"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"number"})}),(0,n.jsx)(r.td,{children:"of the motion; angle from North in decimal degrees, positive clockwise"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsxs)(r.td,{children:["Optional parameters ",(0,n.jsx)(r.em,{children:"(default {})"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"string"})}),(0,n.jsxs)(r.td,{children:["in which ",(0,n.jsx)(r.code,{children:"distance"})," will be express; miles, kilometers, degrees, or radians ",(0,n.jsx)(r.em,{children:"(default 'kilometers')"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.zTranslation",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"number"})}),(0,n.jsxs)(r.td,{children:["length of the vertical motion, same unit of distance ",(0,n.jsx)(r.em,{children:"(default 0)"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(r.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})," the translated GeoJSON object"]})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:"var poly = turf.polygon([\n  [\n    [0, 29],\n    [3.5, 29],\n    [2.5, 32],\n    [0, 29],\n  ],\n]);\nvar translatedPoly = turf.transformTranslate(poly, 100, 35);\n"})}),"\n","\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(x,{})}),";"]}),"\n",(0,n.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/transform-translate\n\nimport { transformTranslate } from "@turf/transform-translate";\nconst result = transformTranslate(...);\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.transformTranslate(...);\n'})})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);